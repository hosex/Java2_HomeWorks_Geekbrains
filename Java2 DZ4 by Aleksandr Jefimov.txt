package DZ43;

import java.util.Random;
import java.util.Scanner;

public class Main {
    
            public static char[][] map;
            public static final int SIZE = 3;
            public static final int DOTS_TO_WIN = 3;
            public static final char DOT_EMPTY = '_';
            public static final char DOT_X = 'X';
            public static final char DOT_O = 'O';

            public static Scanner sc = new Scanner(System.in);
            public static Random rand = new Random();

            public static void main(String[] args) {
                initMap();
                printMap();
                while(true){
                    humanTurn();
                    printMap();
                    if (checkWin(DOT_X)){
                        System.out.println("Human win");
                        break;
                    }
                    if (isMapFull()){
                        System.out.println("Goalless draw");
                        break;
                    }
                    aiTurn();
                    printMap();
                    if (checkWin(DOT_O)){
                        System.out.println("AI win");
                        break;
                    }
                    if (isMapFull()){
                        System.out.println("Goalless Draw");
                        break;
                    }
                }
                System.out.println("Game Over");
            }

            public static void initMap(){
                map = new char[SIZE][SIZE];
                for (int i = 0; i < SIZE; i++) {
                    for (int j = 0; j < SIZE; j++) {
                        map[i][j] = DOT_EMPTY;
                    }
                }
            }

            public static void printMap(){
                for (int i = 0; i <= SIZE ; i++) {
                    System.out.print(i + " ");
                }
                System.out.println();
                for (int i = 0; i < SIZE; i++) {
                    System.out.print((i + 1) + " ");
                    for (int j = 0; j < SIZE; j++) {
                        System.out.print(map[i][j] + " ");
                    }
                    System.out.println();
                }
                System.out.println();
            }

            public static void humanTurn(){
                int x, y;
                do{
                    System.out.println("Enter coordinats in the format X Y");
                    x = sc.nextInt() - 1;
                    y = sc.nextInt() - 1;
                } while (!isCellEmpty(x,y));
                map[y][x] = DOT_X;
            }

            public static void aiTurn(){
                int x, y;
                do{
                    x = rand.nextInt(SIZE);
                    y = rand.nextInt(SIZE);
                } while (!isCellEmpty(x,y));
                System.out.println("Computer went to the point " + (x + 1) + " " + (y + 1));
                map[y][x] = DOT_O;
            }

            public static boolean isMapFull(){
                for (int i = 0; i < SIZE; i++) {
                    for (int j = 0; j < SIZE; j++) {
                        if (map[i][j] == DOT_EMPTY) return false;
                    }
                }
                return true;
            }

            public static boolean checkWin(char dot){
                if (map[0][0] == dot && map[0][1] == dot && map[0][2] == dot) return true;
                if (map[1][0] == dot && map[1][1] == dot && map[1][2] == dot) return true;
                if (map[2][0] == dot && map[2][1] == dot && map[2][2] == dot) return true;

                if (map[0][0] == dot && map[1][0] == dot && map[2][0] == dot) return true;
                if (map[0][1] == dot && map[1][1] == dot && map[2][1] == dot) return true;
                if (map[0][2] == dot && map[1][2] == dot && map[2][2] == dot) return true;

                if (map[0][0] == dot && map[1][1] == dot && map[2][2] == dot) return true;
                if (map[2][0] == dot && map[1][1] == dot && map[0][2] == dot) return true;
                return false;
            }


            public static boolean isCellEmpty(int x, int y){
                if (x < 0 || x >= SIZE|| y < 0 || y >= SIZE) return false;
                if (map[y][x] == DOT_EMPTY) return true;
                return false;
            }


        }
